•Поддерживать протокол HTTP 1.1;

•Уметь отдавать статические ресурсы по GET запросам (текстовые и бинарные);

•При запросе папки – отображать все файлы в данной папке;

•Иметь возможность использовать специфичный обработчик на любой запрос пользователя;

•Поддерживать GET, POST и HEAD запросы, при запросах других методов возвращать Status =
405 (Not Allowed);

•Поддерживать только application/x-www-form-urlencoded кодировку данных формы;

•Поддерживать извлечение параметров из GET и POST запросов;

•Поддерживать следующие статусы:

1)200=OK – успешный запрос;
2)400=Bad Request – когда параметры запроса неверные;
3)404=Not Found – когда не существует запрашиваемый ресурсы;
4)405=Method Not Allowed – неподдерживаемый метод запроса;
5)500=Internal Server Error – внутренняя ошибка сервера;
6)505=HTTP Version Not Supported – версия протокола HTTP не равна 1.1;

•Должен работать в блокирующем режиме, т.е. каждое соединение обрабатывается в отдельном
потоке выполнения. Потоки выполнения запрашиваться должны из пула потоков;

•После каждого запроса закрывать соединение с браузером;

•Заголовки запроса регистронезависисмые с поддержкой переноса на следующую строку;

•Уметь информировать браузер о кэшировании статических ресурсов;

•Поддерживать все mime-types.

•Иметь шаблоны отображения страниц с ошибками;

•Поддерживать пул соединений к реляционной базе данных;

•Конфигурироваться, используя properties файлы;

•Иметь консоль управления для запуска и остановке сервера;

•Корректно закрывать все ресурсы при остановке.